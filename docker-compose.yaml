services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5433:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./data:/docker-entrypoint-initdb.d/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  airflow-webserver:
    build: .
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    environment: &airflow-common-env
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      # ðŸ‘‡ PASTE YOUR GENERATED KEY HERE
      AIRFLOW__WEBSERVER__SECRET_KEY: 'q6NylEvGxrx-Xx8KjXWqqdKRTuQLvrj98oKZgvDiL2A='
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build: .
    container_name: airflow-scheduler
    command: scheduler
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    environment:
      <<: *airflow-common-env
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $(hostname)"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-worker:
    build: .
    container_name: airflow-worker
    command: celery worker
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    environment:
      <<: *airflow-common-env

  airflow-init:
    build: .
    container_name: airflow-init
    command:
      - bash
      - -c
      - |
        airflow db upgrade
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
    depends_on:
      - postgres
      - redis
    environment:
      <<: *airflow-common-env

volumes:
  postgres-db-volume: